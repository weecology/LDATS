% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_preparation.R
\name{data_subsetting}
\alias{data_subsetting}
\alias{null_rule}
\alias{systematic_loo}
\alias{random_loo}
\alias{leave_p_out}
\title{Subset data sets}
\usage{
null_rule(data, iteration = 1)

systematic_loo(data, iteration = 1)

random_loo(data, iteration = 1)

leave_p_out(data, p = 1, pre = 0, post = 0, random = TRUE,
  locations = NULL)
}
\arguments{
\item{data}{\code{data.frame} or \code{matrix} of data to be split.}

\item{iteration}{\code{integer}-conformable value indicating which 
iteration through the process the current implementation is.}

\item{p}{\code{integer}-conformable value of how many samples to leave out.}

\item{pre, post}{\code{integer}-conformable values of how many samples
to include in the buffer around the focal left out data. Can be 
asymmetric.}

\item{random}{\code{logical} indicator of if the left out data should be
randomly selected.}

\item{locations}{\code{integer}-conformable values referencing which
data to hold out.}
}
\value{
\code{character} \code{vector} of \code{"train"} and \code{"test"}
 values.
}
\description{
For use within, e.g., cross validation methods, these 
 functions subdivide the data into testing and training subsets. \cr \cr
 \code{null_rule} places all data in the training set. \cr \cr 
 \code{random_loo} conducts randomized leave-one-out with no buffer. 
  \cr \cr 
 \code{systematic_loo} conducts systematic leave-one-out with no buffer. 
  Assumes 1:1 between iteration and datum location to drop. \cr \cr 
 \code{leave_p_out} is a fully flexible leave p out function allowing for 
  asymmetric buffers and randomization. If \code{random = TRUE}, the test 
  data are selected randomly, otherwise locations are used.
}
